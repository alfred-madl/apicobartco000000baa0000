{   
    "openapi":"3.0.3",
    "x-apico-info": {
        "ten": {
            "cod": "apico",
            "nam": "APICo"
        },
        "set": {
            "cod": "ba",
            "nam": "Base",
            "dom": "apico.io"
        },
        "prj": {
            "cod": "rt",
            "nam": "Root",
            "sdm": "api"
        },
        "svc": {
            "cod": "ma",
            "nam": "Main",
            "cmt": "The scaffolder - now using the first simple template for Azure Event Sourcing with a Function Proxy, CosmosDB and Event Grid Domain - V1"
        },
        "ver": {
            "cod": "00",
            "nam": "Version0",
            "cmt": "Very first try",
            "num": "0",
            "pth": "v0"
        },
        "gen": {
            "id": "af80036a-7999-4571-8875-e99c19998acb",
            "tpl": "apicobartma-azr-evt-src-fpr-cdb-egd-v1.0.0",
            "cti": "C2020xxxxx" 
        },
        "dpl": {
            "id": "fa1cf075-3c0b-436b-a024-e1d88ea9d3f0",
            "cti": "C2020xxxxx" 
        },
        "ins": {
            "fam": {
                "cod": "1gp",
                "nam": "Dev-Plg-Maj-Upd-Green-Primary"
            },
            "lan": {
                "cod": "1",
                "nam": "Dev-Plg-Maj-Upd",
                "org": { "cod": "dev", "nam": "Development"},
                "cat": { "cod": "plg", "nam": "Playground"},
                "spd": { "cod": "maj", "nam": "Major"},
                "stp": { "cod": "upd", "nam": "Update"}
            },
            "slt": {
                "cod": "g",
                "nam": "Green"
            },
            "env": {
                "cod": "p",
                "nam": "Primary"
            },
            "reg": {
                "cod": "s",
                "nam": "SouthEastAsia"
            },
            "sub": {
                "id": "aec9ffa0-e92d-492d-87b7-a26053b2e22c"
            }
        }
    },
    "tags": [
        {
            "name": "tenants",
            "description": "A strictly separated data area and collection of users in the SaaS environment",
            "externalDocs": {
                "description": "Documentation of the Tenant API",
                "url": "http://docs.apico.io/api/collection/tenants"
            }
        },
        {
            "name": "users",
            "description": "A user in a tenant",
            "externalDocs": {
                "description": "Documentation of the User API",
                "url": "http://docs.apico.io/api/collection/users"
            }
        },
        {
            "name": "groups",
            "description": "A group of users in a tenant",
            "externalDocs": {
                "description": "Documentation of the Group API",
                "url": "http://docs.apico.io/api/collection/groups"
            }
        },
        {
            "name": "organizations",
            "description": "A lane organization in a tenant",
            "externalDocs": {
                "description": "Documentation of the Organization API",
                "url": "http://docs.apico.io/api/collection/organizations"
            }
        },
        {
            "name": "sets",
            "description": "A set of projects in a tenant",
            "externalDocs": {
                "description": "Documentation of the Set API",
                "url": "http://docs.apico.io/api/collection/sets"
            }
        },
        {
            "name": "categories",
            "description": "A lane category in a project set in a tenant",
            "externalDocs": {
                "description": "Documentation of the Category API",
                "url": "http://docs.apico.io/api/collection/categories"
            }
        },
        {
            "name": "speeds",
            "description": "A lane speed in a project set in a tenant",
            "externalDocs": {
                "description": "Documentation of the Speed API",
                "url": "http://docs.apico.io/api/collection/speeds"
            }
        },
        {
            "name": "steps",
            "description": "A lane step in a project set in a tenant",
            "externalDocs": {
                "description": "Documentation of the Step API",
                "url": "http://docs.apico.io/api/collection/steps"
            }
        },
        {
            "name": "lanes",
            "description": "A lane (category,speed,org,step) in a project set in a tenant",
            "externalDocs": {
                "description": "Documentation of the Lane API",
                "url": "http://docs.apico.io/api/collection/lanes"
            }
        },
        {
            "name": "slots",
            "description": "A slot in a project set in a tenant",
            "externalDocs": {
                "description": "Documentation of the Slot API",
                "url": "http://docs.apico.io/api/collection/slots"
            }
        },
        {
            "name": "environments",
            "description": "An environment in a project set in a tenant",
            "externalDocs": {
                "description": "Documentation of the Environment API",
                "url": "http://docs.apico.io/api/collection/environments"
            }
        },
        {
            "name": "regions",
            "description": "A region in a project set in a tenant",
            "externalDocs": {
                "description": "Documentation of the Region API",
                "url": "http://docs.apico.io/api/collection/regions"
            }
        },
        {
            "name": "subscriptions",
            "description": "A subscription in a project set in a tenant",
            "externalDocs": {
                "description": "Documentation of the Subscription API",
                "url": "http://docs.apico.io/api/collection/subscriptions"
            }
        },
        {
            "name": "projects",
            "description": "A project in a project set in a tenant",
            "externalDocs": {
                "description": "Documentation of the Project API",
                "url": "http://docs.apico.io/api/collection/projects"
            }
        },
        {
            "name": "families",
            "description": "An instance family (instance group) in a project in a project set in a tenant",
            "externalDocs": {
                "description": "Documentation of the Family API",
                "url": "http://docs.apico.io/api/collection/families"
            }
        },
        {
            "name": "instances",
            "description": "An instance in a project in a project set in a tenant",
            "externalDocs": {
                "description": "Documentation of the Instance API",
                "url": "http://docs.apico.io/api/collection/instances"
            }
        },
        {
            "name": "generations",
            "description": "A generated output of a version of a service in a project in a project set in a tenant - for one service instance",
            "externalDocs": {
                "description": "Documentation of the Generation API",
                "url": "http://docs.apico.io/api/collection/generations"
            }
        },
        {
            "name": "deployments",
            "description": "A deployment of a generated output of a version of a service in a project in a project set in a tenant",
            "externalDocs": {
                "description": "Documentation of the Deployment API",
                "url": "http://docs.apico.io/api/collection/deployments"
            }
        },
        {
            "name": "services",
            "description": "A service (API as OpenAPI) in a project in a project set in a tenant",
            "externalDocs": {
                "description": "Documentation of the Service API",
                "url": "http://docs.apico.io/api/collection/services"
            }
        },
        {
            "name": "versions",
            "description": "A version of a service in a project in a project set in a tenant",
            "externalDocs": {
                "description": "Documentation of the Version API",
                "url": "http://docs.apico.io/api/collection/versions"
            }
        }
    ],

    "info": {
        "title": "APICo Base Root Main",
        "description": "First try of generating the app",
        "termsOfService": "https://www.apico.io/terms",
        "contact": {
            "email": "office@apico.io",
            "name": "Office",
            "url": "https://www.apico.io"
        },
        "license": {
            "name": "GNU General Public License",
            "url": "https://www.gnu.org/licenses/gpl-3.0.en.html"
        },
        "version":"0.0"
    },
    "servers": [
        {
            "url": "https://apicobartma00nnnbfa01gps.azurewebsites.net",
            "description": "APICo Base Root Main 0.1.0 apicobartma-azr-evt-src-fpr-cdb-egd-v1.0.0 C2020xxxxx C2020xxxxx Dev-Plg-Maj-Upd Green Primary SouthEastAsia "
        }
    ],
    "paths": {
        "/tenants": {
            "description": "All strictly separated data areas and collections of users in the SaaS environment",
            "x-apico-path-type-code": "c",
            "x-apico-path-type-name": "Collection",
            "x-apico-collection-code": "t",
            "x-apico-collection-name": "Tenants",
            "x-apico-collection-absolute-path": "/tenants",
            "x-apico-entity-code": "t",
            "x-apico-entity-name": "Tenant",
            "get": {
                "description": "Search for a tenant",
                "tags": ["tenants"],
                "x-apico-test-calls": [
                    { "callid1": "y"}
                ],
                "responses": {}
            },
            "post": {
                "description": "Insert a new tenant",
                "tags": ["tenants"],
                "requestBody": {
                    "description": "Pet object that needs to be added to the store",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                            },
                            "examples": {
                                "Cat": {
                                    "summary": "An example of cat",
                                    "description": "An example of cat, using `value` property",
                                    "x-apico-test-calls": [
                                        { "callid1": "y"}
                                    ],
                                    "value": {
                                        "id": 1,
                                        "category": {
                                            "id": 1,
                                            "name": "cat"
                                        },
                                        "name": "fluffy",
                                        "photoUrls": [
                                            "http://example.com/path/to/cat/1.jpg",
                                            "http://example.com/path/to/cat/2.jpg"
                                        ],
                                        "tags": [{
                                            "id": 1,
                                            "name": "cat"
                                        }],
                                        "status": "available"
                                    }
                                },
                                "Cat2": {
                                    "summary": "An example of cat",
                                    "description": "An example of cat, using `value` property, which value is an array",
                                    "value": [{
                                        "id": 1,
                                        "category": {
                                            "id": 1,
                                            "name": "cat"
                                        },
                                        "name": "fluffy",
                                        "photoUrls": [
                                            "http://example.com/path/to/cat/1.jpg",
                                            "http://example.com/path/to/cat/2.jpg"
                                        ],
                                        "tags": [{
                                            "id": 1,
                                            "name": "cat"
                                        }],
                                        "status": "available"
                                    }]
                                },
                                "Dog": {
                                    "summary": "An example of dog",
                                    "description": "An example of dog, using `externalValue` property",
                                    "externalValue": "http://example.com/examples/dog.json"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "a pet to be returned"
                    }
                }
            }
        },
        "/tenants('{tenant-id}')": {
            "description": "A strictly separated data area and collection of users in the SaaS environment",
            "x-apico-path-type-code": "o",
            "x-apico-path-type-name": "Object",
            "x-apico-collection-code": "t",
            "x-apico-collection-name": "Tenants",
            "x-apico-collection-absolute-path": "/tenants",
            "x-apico-entity-code": "t",
            "x-apico-entity-name": "Tenant",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true,
                    "x-apico-object-identifier": true
                }
            ],
            "get": {
                "description": "Read a tenant",
                "tags": ["tenants"],
                "responses": {}
            },
            "put": {
                "description": "Upsert a tenant",
                "tags": ["tenants"],
                "responses": {}
            },
            "post": {
                "description": "Create an identified tenant",
                "tags": ["tenants"],
                "responses": {}
            },
            "delete": {
                "description": "Delete a tenant",
                "tags": ["tenants"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/users": {
            "description": "All users in a tenant",
            "x-apico-path-type-code": "c",
            "x-apico-path-type-name": "Collection",
            "x-apico-collection-code": "u",
            "x-apico-collection-name": "Users",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/users",
            "x-apico-entity-code": "u",
            "x-apico-entity-name": "User",
            "x-apico-parent-collection-code": "t",
            "x-apico-parent-collection-name": "Tenants",
            "x-apico-parent-entity-code": "t",
            "x-apico-parent-entity-name": "Tenant",
            "x-apico-parent-collection-absolute-path": "/tenants",
            "x-apico-parent-entity-path": ".tenants",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                }
            ],
            "get": {
                "description": "Search for a user",
                "tags": ["users"],
                "responses": {}
            },
            "post": {
                "description": "Insert a new user",
                "tags": ["users"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/users('{user-id}')": {
            "description": "A user in a tenant",
            "x-apico-path-type-code": "o",
            "x-apico-path-type-name": "Object",
            "x-apico-collection-code": "u",
            "x-apico-collection-name": "Users",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/users",
            "x-apico-entity-code": "u",
            "x-apico-entity-name": "User",
            "x-apico-parent-collection-code": "t",
            "x-apico-parent-collection-name": "Tenants",
            "x-apico-parent-entity-code": "t",
            "x-apico-parent-entity-name": "Tenant",
            "x-apico-parent-collection-absolute-path": "/tenants",
            "x-apico-parent-entity-path": ".tenants",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                },
                {
                    "name": "user-id",
                    "description": "The id (usually a GUID) of the user",
                    "in": "path",
                    "required": true,
                    "x-apico-object-identifier": true
                }
            ],
            "get": {
                "description": "Read a user",
                "tags": ["users"],
                "responses": {}
            },
            "put": {
                "description": "Upsert a user",
                "tags": ["users"],
                "responses": {}
            },
            "post": {
                "description": "Create an identified user",
                "tags": ["users"],
                "responses": {}
            },
            "delete": {
                "description": "Delete a user",
                "tags": ["users"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/groups": {
            "description": "All groups of users in a tenant",
            "x-apico-path-type-code": "c",
            "x-apico-path-type-name": "Collection",
            "x-apico-collection-code": "g",
            "x-apico-collection-name": "Groups",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/groups",
            "x-apico-entity-code": "g",
            "x-apico-entity-name": "Group",
            "x-apico-parent-collection-code": "t",
            "x-apico-parent-collection-name": "Tenants",
            "x-apico-parent-entity-code": "t",
            "x-apico-parent-entity-name": "Tenant",
            "x-apico-parent-collection-absolute-path": "/tenants",
            "x-apico-parent-entity-path": ".tenants",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                }
            ],
            "get": {
                "description": "Search for a group",
                "tags": ["groups"],
                "responses": {}
            },
            "post": {
                "description": "Insert a new group",
                "tags": ["groups"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/groups('{group-id}')": {
            "description": "A group of users in a tenant",
            "x-apico-path-type-code": "o",
            "x-apico-path-type-name": "Object",
            "x-apico-collection-code": "g",
            "x-apico-collection-name": "Groups",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/groups",
            "x-apico-entity-code": "g",
            "x-apico-entity-name": "Group",
            "x-apico-parent-collection-code": "t",
            "x-apico-parent-collection-name": "Tenants",
            "x-apico-parent-entity-code": "t",
            "x-apico-parent-entity-name": "Tenant",
            "x-apico-parent-collection-absolute-path": "/tenants",
            "x-apico-parent-entity-path": ".tenants",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                },
                {
                    "name": "group-id",
                    "description": "The id (usually a GUID) of the group",
                    "in": "path",
                    "required": true,
                    "x-apico-object-identifier": true
                }
            ],
            "get": {
                "description": "Read a group",
                "tags": ["groups"],
                "responses": {}
            },
            "put": {
                "description": "Upsert a group",
                "tags": ["groups"],
                "responses": {}
            },
            "post": {
                "description": "Create an identified group",
                "tags": ["groups"],
                "responses": {}
            },
            "delete": {
                "description": "Delete a group",
                "tags": ["groups"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/organizations": {
            "description": "All lane organizations of a tenant",
            "x-apico-path-type-code": "c",
            "x-apico-path-type-name": "Collection",
            "x-apico-collection-code": "z",
            "x-apico-collection-name": "Organizations",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/organizations",
            "x-apico-entity-code": "z",
            "x-apico-entity-name": "Organization",
            "x-apico-parent-collection-code": "t",
            "x-apico-parent-collection-name": "Tenants",
            "x-apico-parent-entity-code": "t",
            "x-apico-parent-entity-name": "Tenant",
            "x-apico-parent-collection-absolute-path": "/tenants",
            "x-apico-parent-entity-path": ".tenants",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                }
            ],
            
            "post": {
                "description": "Insert a new organization",
                "tags": ["organizations"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/organizations('{organization-id}')": {
            "description": "A lane organization in a tenant",
            "x-apico-path-type-code": "o",
            "x-apico-path-type-name": "Object",
            "x-apico-collection-code": "z",
            "x-apico-collection-name": "Organizations",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/organizations",
            "x-apico-entity-code": "z",
            "x-apico-entity-name": "Organization",
            "x-apico-parent-collection-code": "t",
            "x-apico-parent-collection-name": "Tenants",
            "x-apico-parent-entity-code": "t",
            "x-apico-parent-entity-name": "Tenant",
            "x-apico-parent-collection-absolute-path": "/tenants",
            "x-apico-parent-entity-path": ".tenants",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                },
                {
                    "name": "organization-id",
                    "description": "The id (usually a GUID) of the organization",
                    "in": "path",
                    "required": true,
                    "x-apico-object-identifier": true
                }
            ],
            "get": {
                "description": "Read a organization",
                "tags": ["organizations"],
                "responses": {}
            },
            "put": {
                "description": "Upsert a organization",
                "tags": ["organizations"],
                "responses": {}
            },
            "post": {
                "description": "Create an identified organization",
                "tags": ["organizations"],
                "responses": {}
            },
            "delete": {
                "description": "Delete a organization",
                "tags": ["organizations"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/sets": {
            "description": "All sets of projects in a tenant",
            "x-apico-path-type-code": "c",
            "x-apico-path-type-name": "Collection",
            "x-apico-collection-code": "s",
            "x-apico-collection-name": "Sets",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/sets",
            "x-apico-entity-code": "s",
            "x-apico-entity-name": "Set",
            "x-apico-parent-collection-code": "t",
            "x-apico-parent-collection-name": "Tenants",
            "x-apico-parent-entity-code": "t",
            "x-apico-parent-entity-name": "Tenant",
            "x-apico-parent-collection-absolute-path": "/tenants",
            "x-apico-parent-entity-path": ".tenants",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                }
            ],
            
            "post": {
                "description": "Insert a new set",
                "tags": ["sets"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/sets('{set-id}')": {
            "description": "A set of projects in a tenant",
            "x-apico-path-type-code": "o",
            "x-apico-path-type-name": "Object",
            "x-apico-collection-code": "s",
            "x-apico-collection-name": "Sets",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/sets",
            "x-apico-entity-code": "s",
            "x-apico-entity-name": "Set",
            "x-apico-parent-collection-code": "t",
            "x-apico-parent-collection-name": "Tenants",
            "x-apico-parent-entity-code": "t",
            "x-apico-parent-entity-name": "Tenant",
            "x-apico-parent-collection-absolute-path": "/tenants",
            "x-apico-parent-entity-path": ".tenants",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                },
                {
                    "name": "set-id",
                    "description": "The id (usually a GUID) of the set",
                    "in": "path",
                    "required": true,
                    "x-apico-object-identifier": true
                }
            ],
            "get": {
                "description": "Read a set",
                "tags": ["sets"],
                "responses": {}
            },
            "put": {
                "description": "Upsert a set",
                "tags": ["sets"],
                "responses": {}
            },
            "post": {
                "description": "Create an identified set",
                "tags": ["sets"],
                "responses": {}
            },
            "delete": {
                "description": "Delete a set",
                "tags": ["sets"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/sets('{set-id}')/categories": {
            "description": "All lane categories in a project set of a tenant",
            "x-apico-path-type-code": "c",
            "x-apico-path-type-name": "Collection",
            "x-apico-collection-code": "c",
            "x-apico-collection-name": "Categories",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/categories",
            "x-apico-entity-code": "c",
            "x-apico-entity-name": "Category",
            "x-apico-parent-collection-code": "s",
            "x-apico-parent-collection-name": "Sets",
            "x-apico-parent-entity-code": "s",
            "x-apico-parent-entity-name": "Set",
            "x-apico-parent-collection-absolute-path": "/tenants('{tenant-id}')/sets",
            "x-apico-parent-entity-path": ".tenants.sets",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "set-id",
                    "description": "The id (usually a GUID) of the set",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                }
            ],
            
            "post": {
                "description": "Insert a new category",
                "tags": ["categories"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/sets('{set-id}')/categories('{category-id}')": {
            "description": "A lane category in a project set in a tenant",
            "x-apico-path-type-code": "o",
            "x-apico-path-type-name": "Object",
            "x-apico-collection-code": "c",
            "x-apico-collection-name": "Categories",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/categories",
            "x-apico-entity-code": "c",
            "x-apico-entity-name": "Category",
            "x-apico-parent-collection-code": "s",
            "x-apico-parent-collection-name": "Sets",
            "x-apico-parent-entity-code": "s",
            "x-apico-parent-entity-name": "Set",
            "x-apico-parent-collection-absolute-path": "/tenants('{tenant-id}')/sets",
            "x-apico-parent-entity-path": ".tenants.sets",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "set-id",
                    "description": "The id (usually a GUID) of the set",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                },
                {
                    "name": "category-id",
                    "description": "The id (usually a GUID) of the category",
                    "in": "path",
                    "required": true,
                    "x-apico-object-identifier": true
                }
            ],
            "get": {
                "description": "Read a category",
                "tags": ["categories"],
                "responses": {}
            },
            "put": {
                "description": "Upsert a category",
                "tags": ["categories"],
                "responses": {}
            },
            "post": {
                "description": "Create an identified category",
                "tags": ["categories"],
                "responses": {}
            },
            "delete": {
                "description": "Delete a category",
                "tags": ["categories"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/sets('{set-id}')/speeds": {
            "description": "All lane speeds in a project set of a tenant",
            "x-apico-path-type-code": "c",
            "x-apico-path-type-name": "Collection",
            "x-apico-collection-code": "m",
            "x-apico-collection-name": "Speeds",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/speeds",
            "x-apico-entity-code": "m",
            "x-apico-entity-name": "Speed",
            "x-apico-parent-collection-code": "s",
            "x-apico-parent-collection-name": "Sets",
            "x-apico-parent-entity-code": "s",
            "x-apico-parent-entity-name": "Set",
            "x-apico-parent-collection-absolute-path": "/tenants('{tenant-id}')/sets",
            "x-apico-parent-entity-path": ".tenants.sets",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "set-id",
                    "description": "The id (usually a GUID) of the set",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                }
            ],
            
            "post": {
                "description": "Insert a new speed",
                "tags": ["speeds"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/sets('{set-id}')/speeds('{speed-id}')": {
            "description": "A lane speed in a project set in a tenant",
            "x-apico-path-type-code": "o",
            "x-apico-path-type-name": "Object",
            "x-apico-collection-code": "m",
            "x-apico-collection-name": "Speeds",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/speeds",
            "x-apico-entity-code": "m",
            "x-apico-entity-name": "Speed",
            "x-apico-parent-collection-code": "s",
            "x-apico-parent-collection-name": "Sets",
            "x-apico-parent-entity-code": "s",
            "x-apico-parent-entity-name": "Set",
            "x-apico-parent-collection-absolute-path": "/tenants('{tenant-id}')/sets",
            "x-apico-parent-entity-path": ".tenants.sets",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "set-id",
                    "description": "The id (usually a GUID) of the set",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                },
                {
                    "name": "speed-id",
                    "description": "The id (usually a GUID) of the speed",
                    "in": "path",
                    "required": true,
                    "x-apico-object-identifier": true
                }
            ],
            "get": {
                "description": "Read a speed",
                "tags": ["speeds"],
                "responses": {}
            },
            "put": {
                "description": "Upsert a speed",
                "tags": ["speeds"],
                "responses": {}
            },
            "post": {
                "description": "Create an identified speed",
                "tags": ["speeds"],
                "responses": {}
            },
            "delete": {
                "description": "Delete a speed",
                "tags": ["speeds"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/sets('{set-id}')/steps": {
            "description": "All lane steps in a project set of a tenant",
            "x-apico-path-type-code": "c",
            "x-apico-path-type-name": "Collection",
            "x-apico-collection-code": "h",
            "x-apico-collection-name": "Steps",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/steps",
            "x-apico-entity-code": "h",
            "x-apico-entity-name": "Step",
            "x-apico-parent-collection-code": "s",
            "x-apico-parent-collection-name": "Sets",
            "x-apico-parent-entity-code": "s",
            "x-apico-parent-entity-name": "Set",
            "x-apico-parent-collection-absolute-path": "/tenants('{tenant-id}')/sets",
            "x-apico-parent-entity-path": ".tenants.sets",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "set-id",
                    "description": "The id (usually a GUID) of the set",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                }
            ],
            
            "post": {
                "description": "Insert a new step",
                "tags": ["steps"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/sets('{set-id}')/steps('{step-id}')": {
            "description": "A lane step in a project set in a tenant",
            "x-apico-path-type-code": "o",
            "x-apico-path-type-name": "Object",
            "x-apico-collection-code": "h",
            "x-apico-collection-name": "Steps",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/steps",
            "x-apico-entity-code": "h",
            "x-apico-entity-name": "Step",
            "x-apico-parent-collection-code": "s",
            "x-apico-parent-collection-name": "Sets",
            "x-apico-parent-entity-code": "s",
            "x-apico-parent-entity-name": "Set",
            "x-apico-parent-collection-absolute-path": "/tenants('{tenant-id}')/sets",
            "x-apico-parent-entity-path": ".tenants.sets",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "set-id",
                    "description": "The id (usually a GUID) of the set",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                },
                {
                    "name": "step-id",
                    "description": "The id (usually a GUID) of the step",
                    "in": "path",
                    "required": true,
                    "x-apico-object-identifier": true
                }
            ],
            "get": {
                "description": "Read a step",
                "tags": ["steps"],
                "responses": {}
            },
            "put": {
                "description": "Upsert a step",
                "tags": ["steps"],
                "responses": {}
            },
            "post": {
                "description": "Create an identified step",
                "tags": ["steps"],
                "responses": {}
            },
            "delete": {
                "description": "Delete a step",
                "tags": ["steps"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/sets('{set-id}')/lanes": {
            "description": "All lanes in a project set of a tenant",
            "x-apico-path-type-code": "c",
            "x-apico-path-type-name": "Collection",
            "x-apico-collection-code": "l",
            "x-apico-collection-name": "Lanes",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/lanes",
            "x-apico-entity-code": "l",
            "x-apico-entity-name": "Lane",
            "x-apico-parent-collection-code": "s",
            "x-apico-parent-collection-name": "Sets",
            "x-apico-parent-entity-code": "s",
            "x-apico-parent-entity-name": "Set",
            "x-apico-parent-collection-absolute-path": "/tenants('{tenant-id}')/sets",
            "x-apico-parent-entity-path": ".tenants.sets",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "set-id",
                    "description": "The id (usually a GUID) of the set",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                }
            ],
            
            "post": {
                "description": "Insert a new lane",
                "tags": ["lanes"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/sets('{set-id}')/lanes('{lane-id}')": {
            "description": "A lane (category,speed,org,step) in a project set in a tenant",
            "x-apico-path-type-code": "o",
            "x-apico-path-type-name": "Object",
            "x-apico-collection-code": "l",
            "x-apico-collection-name": "Lanes",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/lanes",
            "x-apico-entity-code": "l",
            "x-apico-entity-name": "Lane",
            "x-apico-parent-collection-code": "s",
            "x-apico-parent-collection-name": "Sets",
            "x-apico-parent-entity-code": "s",
            "x-apico-parent-entity-name": "Set",
            "x-apico-parent-collection-absolute-path": "/tenants('{tenant-id}')/sets",
            "x-apico-parent-entity-path": ".tenants.sets",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "set-id",
                    "description": "The id (usually a GUID) of the set",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                },
                {
                    "name": "lane-id",
                    "description": "The id (usually a GUID) of the lane",
                    "in": "path",
                    "required": true,
                    "x-apico-object-identifier": true
                }
            ],
            "get": {
                "description": "Read a lane",
                "tags": ["lanes"],
                "responses": {}
            },
            "put": {
                "description": "Upsert a lane",
                "tags": ["lanes"],
                "responses": {}
            },
            "post": {
                "description": "Create an identified lane",
                "tags": ["lanes"],
                "responses": {}
            },
            "delete": {
                "description": "Delete a lane",
                "tags": ["lanes"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/sets('{set-id}')/slots": {
            "description": "All slots in a project set of a tenant",
            "x-apico-path-type-code": "c",
            "x-apico-path-type-name": "Collection",
            "x-apico-collection-code": "t",
            "x-apico-collection-name": "Slots",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/slots",
            "x-apico-entity-code": "t",
            "x-apico-entity-name": "Slot",
            "x-apico-parent-collection-code": "s",
            "x-apico-parent-collection-name": "Sets",
            "x-apico-parent-entity-code": "s",
            "x-apico-parent-entity-name": "Set",
            "x-apico-parent-collection-absolute-path": "/tenants('{tenant-id}')/sets",
            "x-apico-parent-entity-path": ".tenants.sets",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "set-id",
                    "description": "The id (usually a GUID) of the set",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                }
            ],
            
            "post": {
                "description": "Insert a new slot",
                "tags": ["slots"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/sets('{set-id}')/slots('{slot-id}')": {
            "description": "A slot in a project set in a tenant",
            "x-apico-path-type-code": "o",
            "x-apico-path-type-name": "Object",
            "x-apico-collection-code": "t",
            "x-apico-collection-name": "Slots",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/slots",
            "x-apico-entity-code": "t",
            "x-apico-entity-name": "Slot",
            "x-apico-parent-collection-code": "s",
            "x-apico-parent-collection-name": "Sets",
            "x-apico-parent-entity-code": "s",
            "x-apico-parent-entity-name": "Set",
            "x-apico-parent-collection-absolute-path": "/tenants('{tenant-id}')/sets",
            "x-apico-parent-entity-path": ".tenants.sets",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "set-id",
                    "description": "The id (usually a GUID) of the set",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                },
                {
                    "name": "slot-id",
                    "description": "The id (usually a GUID) of the slot",
                    "in": "path",
                    "required": true,
                    "x-apico-object-identifier": true
                }
            ],
            "get": {
                "description": "Read a slot",
                "tags": ["slots"],
                "responses": {}
            },
            "put": {
                "description": "Upsert a slot",
                "tags": ["slots"],
                "responses": {}
            },
            "post": {
                "description": "Create an identified slot",
                "tags": ["slots"],
                "responses": {}
            },
            "delete": {
                "description": "Delete a slot",
                "tags": ["slots"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/sets('{set-id}')/environments": {
            "description": "All environments in a project set of a tenant",
            "x-apico-path-type-code": "c",
            "x-apico-path-type-name": "Collection",
            "x-apico-collection-code": "e",
            "x-apico-collection-name": "Environments",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/environments",
            "x-apico-entity-code": "e",
            "x-apico-entity-name": "Environment",
            "x-apico-parent-collection-code": "s",
            "x-apico-parent-collection-name": "Sets",
            "x-apico-parent-entity-code": "s",
            "x-apico-parent-entity-name": "Set",
            "x-apico-parent-collection-absolute-path": "/tenants('{tenant-id}')/sets",
            "x-apico-parent-entity-path": ".tenants.sets",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "set-id",
                    "description": "The id (usually a GUID) of the set",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                }
            ],
            "get": {
                "description": "Search for a environment",
                "tags": ["environments"],
                "responses": {}
            },
            "post": {
                "description": "Insert a new environment",
                "tags": ["environments"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/sets('{set-id}')/environments('{environment-id}')": {
            "description": "An environment in a project set in a tenant",
            "x-apico-path-type-code": "o",
            "x-apico-path-type-name": "Object",
            "x-apico-collection-code": "e",
            "x-apico-collection-name": "Environments",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/environments",
            "x-apico-entity-code": "e",
            "x-apico-entity-name": "Environment",
            "x-apico-parent-collection-code": "s",
            "x-apico-parent-collection-name": "Sets",
            "x-apico-parent-entity-code": "s",
            "x-apico-parent-entity-name": "Set",
            "x-apico-parent-collection-absolute-path": "/tenants('{tenant-id}')/sets",
            "x-apico-parent-entity-path": ".tenants.sets",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "set-id",
                    "description": "The id (usually a GUID) of the set",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                },
                {
                    "name": "environment-id",
                    "description": "The id (usually a GUID) of the environment",
                    "in": "path",
                    "required": true,
                    "x-apico-object-identifier": true
                }
            ],
            "get": {
                "description": "Read a environment",
                "tags": ["environments"],
                "responses": {}
            },
            "put": {
                "description": "Upsert a environment",
                "tags": ["environments"],
                "responses": {}
            },
            "post": {
                "description": "Create an identified environment",
                "tags": ["environments"],
                "responses": {}
            },
            "delete": {
                "description": "Delete a environment",
                "tags": ["environments"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/sets('{set-id}')/regions": {
            "description": "All regions in a project set of a tenant",
            "x-apico-path-type-code": "c",
            "x-apico-path-type-name": "Collection",
            "x-apico-collection-code": "o",
            "x-apico-collection-name": "Regions",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/regions",
            "x-apico-entity-code": "o",
            "x-apico-entity-name": "Region",
            "x-apico-parent-collection-code": "s",
            "x-apico-parent-collection-name": "Sets",
            "x-apico-parent-entity-code": "s",
            "x-apico-parent-entity-name": "Set",
            "x-apico-parent-collection-absolute-path": "/tenants('{tenant-id}')/sets",
            "x-apico-parent-entity-path": ".tenants.sets",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "set-id",
                    "description": "The id (usually a GUID) of the set",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                }
            ],
            
            "post": {
                "description": "Insert a new region",
                "tags": ["regions"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/sets('{set-id}')/regions('{region-id}')": {
            "description": "A region in a project set in a tenant",
            "x-apico-path-type-code": "o",
            "x-apico-path-type-name": "Object",
            "x-apico-collection-code": "o",
            "x-apico-collection-name": "Regions",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/regions",
            "x-apico-entity-code": "o",
            "x-apico-entity-name": "Region",
            "x-apico-parent-collection-code": "s",
            "x-apico-parent-collection-name": "Sets",
            "x-apico-parent-entity-code": "s",
            "x-apico-parent-entity-name": "Set",
            "x-apico-parent-collection-absolute-path": "/tenants('{tenant-id}')/sets",
            "x-apico-parent-entity-path": ".tenants.sets",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "set-id",
                    "description": "The id (usually a GUID) of the set",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                },
                {
                    "name": "region-id",
                    "description": "The id (usually a GUID) of the region",
                    "in": "path",
                    "required": true,
                    "x-apico-object-identifier": true
                }
            ],
            "get": {
                "description": "Read a region",
                "tags": ["regions"],
                "responses": {}
            },
            "put": {
                "description": "Upsert a region",
                "tags": ["regions"],
                "responses": {}
            },
            "post": {
                "description": "Create an identified region",
                "tags": ["regions"],
                "responses": {}
            },
            "delete": {
                "description": "Delete a region",
                "tags": ["regions"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/sets('{set-id}')/subscriptions": {
            "description": "All subscriptions in a project set of a tenant",
            "x-apico-path-type-code": "c",
            "x-apico-path-type-name": "Collection",
            "x-apico-collection-code": "b",
            "x-apico-collection-name": "Subscriptions",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/subscriptions",
            "x-apico-entity-code": "b",
            "x-apico-entity-name": "Subscription",
            "x-apico-parent-collection-code": "s",
            "x-apico-parent-collection-name": "Sets",
            "x-apico-parent-entity-code": "s",
            "x-apico-parent-entity-name": "Set",
            "x-apico-parent-collection-absolute-path": "/tenants('{tenant-id}')/sets",
            "x-apico-parent-entity-path": ".tenants.sets",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "set-id",
                    "description": "The id (usually a GUID) of the set",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                }
            ],
            
            "post": {
                "description": "Insert a new subscription",
                "tags": ["subscriptions"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/sets('{set-id}')/subscriptions('{subscription-id}')": {
            "description": "A subscription in a project set in a tenant",
            "x-apico-path-type-code": "o",
            "x-apico-path-type-name": "Object",
            "x-apico-collection-code": "b",
            "x-apico-collection-name": "Subscriptions",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/subscriptions",
            "x-apico-entity-code": "b",
            "x-apico-entity-name": "Subscription",
            "x-apico-parent-collection-code": "s",
            "x-apico-parent-collection-name": "Sets",
            "x-apico-parent-entity-code": "s",
            "x-apico-parent-entity-name": "Set",
            "x-apico-parent-collection-absolute-path": "/tenants('{tenant-id}')/sets",
            "x-apico-parent-entity-path": ".tenants.sets",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "set-id",
                    "description": "The id (usually a GUID) of the set",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                },
                {
                    "name": "subscription-id",
                    "description": "The id (usually a GUID) of the subscription",
                    "in": "path",
                    "required": true,
                    "x-apico-object-identifier": true
                }
            ],
            "get": {
                "description": "Read a subscription",
                "tags": ["subscriptions"],
                "responses": {}
            },
            "put": {
                "description": "Upsert a subscription",
                "tags": ["subscriptions"],
                "responses": {}
            },
            "post": {
                "description": "Create an identified subscription",
                "tags": ["subscriptions"],
                "responses": {}
            },
            "delete": {
                "description": "Delete a subscription",
                "tags": ["subscriptions"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/sets('{set-id}')/projects": {
            "description": "All projects in a project set of a tenant",
            "x-apico-path-type-code": "c",
            "x-apico-path-type-name": "Collection",
            "x-apico-collection-code": "p",
            "x-apico-collection-name": "Projects",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/projects",
            "x-apico-entity-code": "p",
            "x-apico-entity-name": "Project",
            "x-apico-parent-collection-code": "s",
            "x-apico-parent-collection-name": "Sets",
            "x-apico-parent-entity-code": "s",
            "x-apico-parent-entity-name": "Set",
            "x-apico-parent-collection-absolute-path": "/tenants('{tenant-id}')/sets",
            "x-apico-parent-entity-path": ".tenants.sets",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "set-id",
                    "description": "The id (usually a GUID) of the set",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                }
            ],
            "get": {
                "description": "Search for a project",
                "tags": ["projects"],
                "responses": {}
            },
            "post": {
                "description": "Insert a new project",
                "tags": ["projects"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')": {
            "description": "A project in a project set in a tenant",
            "x-apico-path-type-code": "o",
            "x-apico-path-type-name": "Object",
            "x-apico-collection-code": "p",
            "x-apico-collection-name": "Projects",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/projects",
            "x-apico-entity-code": "p",
            "x-apico-entity-name": "Project",
            "x-apico-parent-collection-code": "s",
            "x-apico-parent-collection-name": "Sets",
            "x-apico-parent-entity-code": "s",
            "x-apico-parent-entity-name": "Set",
            "x-apico-parent-collection-absolute-path": "/tenants('{tenant-id}')/sets",
            "x-apico-parent-entity-path": ".tenants.sets",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "set-id",
                    "description": "The id (usually a GUID) of the set",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                },
                {
                    "name": "project-id",
                    "description": "The id (usually a GUID) of the project",
                    "in": "path",
                    "required": true,
                    "x-apico-object-identifier": true
                }
            ],
            "get": {
                "description": "Read a project",
                "tags": ["projects"],
                "responses": {}
            },
            "put": {
                "description": "Upsert a project",
                "tags": ["projects"],
                "responses": {}
            },
            "post": {
                "description": "Create an identified project",
                "tags": ["projects"],
                "responses": {}
            },
            "delete": {
                "description": "Delete a project",
                "tags": ["projects"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')/families": {
            "description": "All instance families (instance groups) in a project in a projects set of a tenant",
            "x-apico-path-type-code": "c",
            "x-apico-path-type-name": "Collection",
            "x-apico-collection-code": "f",
            "x-apico-collection-name": "Families",
            "x-apico-entity-code": "f",
            "x-apico-entity-name": "Family",
            "x-apico-parent-collection-code": "p",
            "x-apico-parent-collection-name": "Projects",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')/families",
            "x-apico-parent-entity-code": "p",
            "x-apico-parent-entity-name": "Project",
            "x-apico-parent-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/projects",
            "x-apico-parent-entity-path": ".tenants.sets.projects",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "set-id",
                    "description": "The id (usually a GUID) of the set",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "project-id",
                    "description": "The id (usually a GUID) of the project",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                }
            ],
            
            "post": {
                "description": "Insert a new family",
                "tags": ["families"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')/families('{family-id}')": {
            "description": "An instance family (instance group) in a project in a project set in a tenant",
            "x-apico-path-type-code": "o",
            "x-apico-path-type-name": "Object",
            "x-apico-collection-code": "f",
            "x-apico-collection-name": "Families",
            "x-apico-entity-code": "f",
            "x-apico-entity-name": "Family",
            "x-apico-parent-collection-code": "p",
            "x-apico-parent-collection-name": "Projects",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')/families",
            "x-apico-parent-entity-code": "p",
            "x-apico-parent-entity-name": "Project",
            "x-apico-parent-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/projects",
            "x-apico-parent-entity-path": ".tenants.sets.projects",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "set-id",
                    "description": "The id (usually a GUID) of the set",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "project-id",
                    "description": "The id (usually a GUID) of the project",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                },
                {
                    "name": "family-id",
                    "description": "The id (usually a GUID) of the family",
                    "in": "path",
                    "required": true,
                    "x-apico-object-identifier": true
                }
            ],
            "get": {
                "description": "Read a family",
                "tags": ["families"],
                "responses": {}
            },
            "put": {
                "description": "Upsert a family",
                "tags": ["families"],
                "responses": {}
            },
            "post": {
                "description": "Create an identified family",
                "tags": ["families"],
                "responses": {}
            },
            "delete": {
                "description": "Delete a family",
                "tags": ["families"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')/families('{family-id}')/instances": {
            "description": "All instances in a project in a projects set of a tenant",
            "x-apico-path-type-code": "c",
            "x-apico-path-type-name": "Collection",
            "x-apico-collection-code": "i",
            "x-apico-collection-name": "Instances",
            "x-apico-entity-code": "i",
            "x-apico-entity-name": "Instance",
            "x-apico-parent-collection-code": "f",
            "x-apico-parent-collection-name": "Families",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')/families('{family-id}')/instances",
            "x-apico-parent-entity-code": "f",
            "x-apico-parent-entity-name": "Family",
            "x-apico-parent-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')/families",
            "x-apico-parent-entity-path": ".tenants.sets.projects.families",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "set-id",
                    "description": "The id (usually a GUID) of the set",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "project-id",
                    "description": "The id (usually a GUID) of the project",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "family-id",
                    "description": "The id (usually a GUID) of the family",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                }
            ],
            
            "post": {
                "description": "Insert a new instance",
                "tags": ["instances"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')/families('{family-id}')/instances('{instance-id}')": {
            "description": "An instance in a project in a project set in a tenant",
            "x-apico-path-type-code": "o",
            "x-apico-path-type-name": "Object",
            "x-apico-collection-code": "i",
            "x-apico-collection-name": "Instances",
            "x-apico-entity-code": "i",
            "x-apico-entity-name": "Instance",
            "x-apico-parent-collection-code": "f",
            "x-apico-parent-collection-name": "Families",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')/families('{family-id}')/instances",
            "x-apico-parent-entity-code": "f",
            "x-apico-parent-entity-name": "Family",
            "x-apico-parent-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')/families",
            "x-apico-parent-entity-path": ".tenants.sets.projects.families",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "set-id",
                    "description": "The id (usually a GUID) of the set",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "project-id",
                    "description": "The id (usually a GUID) of the project",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "family-id",
                    "description": "The id (usually a GUID) of the family",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                },
                {
                    "name": "instance-id",
                    "description": "The id (usually a GUID) of the instance",
                    "in": "path",
                    "required": true,
                    "x-apico-object-identifier": true
                }
            ],
            "get": {
                "description": "Read a instance",
                "tags": ["instances"],
                "responses": {}
            },
            "put": {
                "description": "Upsert a instance",
                "tags": ["instances"],
                "responses": {}
            },
            "post": {
                "description": "Create an identified instance",
                "tags": ["instances"],
                "responses": {}
            },
            "delete": {
                "description": "Delete a instance",
                "tags": ["instances"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')/families('{family-id}')/instances('{instance-id}')/generations": {
            "description": "All generated outputs of a version of a service in a project in a project set of a tenant - for one service instance",
            "x-apico-path-type-code": "c",
            "x-apico-path-type-name": "Collection",
            "x-apico-collection-code": "n",
            "x-apico-collection-name": "Generations",
            "x-apico-entity-code": "n",
            "x-apico-entity-name": "Generation",
            "x-apico-parent-collection-code": "i",
            "x-apico-parent-collection-name": "Instances",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')/families('{family-id}')/instances('{instance-id}')/generations",
            "x-apico-parent-entity-code": "i",
            "x-apico-parent-entity-name": "Instance",
            "x-apico-parent-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')/families('{family-id}')/instances",
            "x-apico-parent-entity-path": ".tenants.sets.projects.families.instances",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "set-id",
                    "description": "The id (usually a GUID) of the set",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "project-id",
                    "description": "The id (usually a GUID) of the project",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "family-id",
                    "description": "The id (usually a GUID) of the family",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "instance-id",
                    "description": "The id (usually a GUID) of the instance",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                }
            ],
            "get": {
                "description": "Search for a generation",
                "tags": ["generations"],
                "responses": {}
            },
            "post": {
                "description": "Insert a new generation",
                "tags": ["generations"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')/families('{family-id}')/instances('{instance-id}')/generations('{generation-id}')": {
            "description": "A generated output of a version of a service in a project in a project set in a tenant - for one service instance",
            "x-apico-path-type-code": "o",
            "x-apico-path-type-name": "Object",
            "x-apico-collection-code": "n",
            "x-apico-collection-name": "Generations",
            "x-apico-entity-code": "n",
            "x-apico-entity-name": "Generation",
            "x-apico-parent-collection-code": "i",
            "x-apico-parent-collection-name": "Instances",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')/families('{family-id}')/instances('{instance-id}')/generations",
            "x-apico-parent-entity-code": "i",
            "x-apico-parent-entity-name": "Instance",
            "x-apico-parent-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')/families('{family-id}')/instances",
            "x-apico-parent-entity-path": ".tenants.sets.projects.families.instances",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "set-id",
                    "description": "The id (usually a GUID) of the set",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "project-id",
                    "description": "The id (usually a GUID) of the project",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "family-id",
                    "description": "The id (usually a GUID) of the family",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "instance-id",
                    "description": "The id (usually a GUID) of the instance",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                },
                {
                    "name": "generation-id",
                    "description": "The id (usually a GUID) of the generation",
                    "in": "path",
                    "required": true,
                    "x-apico-object-identifier": true
                }
            ],
            "get": {
                "description": "Read a generation",
                "tags": ["generations"],
                "responses": {}
            },
            "put": {
                "description": "Upsert a generation",
                "tags": ["generations"],
                "responses": {}
            },
            "post": {
                "description": "Create an identified generation",
                "tags": ["generations"],
                "responses": {}
            },
            "delete": {
                "description": "Delete a generation",
                "tags": ["generations"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')/families('{family-id}')/instances('{instance-id}')/generations('{generation-id}')/deployments": {
            "description": "All deployments of a generated output of a version of a service in a project in a project set of a tenant",
            "x-apico-path-type-code": "c",
            "x-apico-path-type-name": "Collection",
            "x-apico-collection-code": "d",
            "x-apico-collection-name": "Deployments",
            "x-apico-entity-code": "d",
            "x-apico-entity-name": "Deployment",
            "x-apico-parent-collection-code": "n",
            "x-apico-parent-collection-name": "Generations",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')/families('{family-id}')/instances('{instance-id}')/generations('{generation-id}')/deployments",
            "x-apico-parent-entity-code": "n",
            "x-apico-parent-entity-name": "Generation",
            "x-apico-parent-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')/families('{family-id}')/instances('{instance-id}')/generations",
            "x-apico-parent-entity-path": ".tenants.sets.projects.families.instances.generations",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "set-id",
                    "description": "The id (usually a GUID) of the set",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "project-id",
                    "description": "The id (usually a GUID) of the project",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "family-id",
                    "description": "The id (usually a GUID) of the family",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "instance-id",
                    "description": "The id (usually a GUID) of the instance",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "generation-id",
                    "description": "The id (usually a GUID) of the generation",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                }
            ],
            "get": {
                "description": "Search for a deployment",
                "tags": ["deployments"],
                "responses": {}
            },
            "post": {
                "description": "Insert a new deployment",
                "tags": ["deployments"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')/families('{family-id}')/instances('{instance-id}')/generations('{generation-id}')/deployments('{deployment-id}')": {
            "description": "A deployment of a generated output of a version of a service in a project in a project set in a tenant",
            "x-apico-path-type-code": "o",
            "x-apico-path-type-name": "Object",
            "x-apico-collection-code": "d",
            "x-apico-collection-name": "Deployments",
            "x-apico-entity-code": "d",
            "x-apico-entity-name": "Deployment",
            "x-apico-parent-collection-code": "n",
            "x-apico-parent-collection-name": "Generations",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')/families('{family-id}')/instances('{instance-id}')/generations('{generation-id}')/deployments",
            "x-apico-parent-entity-code": "n",
            "x-apico-parent-entity-name": "Generation",
            "x-apico-parent-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')/families('{family-id}')/instances('{instance-id}')/generations",
            "x-apico-parent-entity-path": ".tenants.sets.projects.families.instances.generations",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "set-id",
                    "description": "The id (usually a GUID) of the set",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "project-id",
                    "description": "The id (usually a GUID) of the project",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "family-id",
                    "description": "The id (usually a GUID) of the family",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "instance-id",
                    "description": "The id (usually a GUID) of the instance",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "generation-id",
                    "description": "The id (usually a GUID) of the generation",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                },
                {
                    "name": "deployment-id",
                    "description": "The id (usually a GUID) of the deployment",
                    "in": "path",
                    "required": true,
                    "x-apico-object-identifier": true
                }
            ],
            "get": {
                "description": "Read a deployment",
                "tags": ["deployments"],
                "responses": {}
            },
            "put": {
                "description": "Upsert a deployment",
                "tags": ["deployments"],
                "responses": {}
            },
            "post": {
                "description": "Create an identified deployment",
                "tags": ["deployments"],
                "responses": {}
            },
            "delete": {
                "description": "Delete a deployment",
                "tags": ["deployments"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')/services": {
            "description": "All services (API as OpenAPI) in a project in a project set of a tenant",
            "x-apico-path-type-code": "c",
            "x-apico-path-type-name": "Collection",
            "x-apico-collection-code": "r",
            "x-apico-collection-name": "Services",
            "x-apico-entity-code": "r",
            "x-apico-entity-name": "Service",
            "x-apico-parent-collection-code": "p",
            "x-apico-parent-collection-name": "Projects",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')/services",
            "x-apico-parent-entity-code": "p",
            "x-apico-parent-entity-name": "Project",
            "x-apico-parent-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/projects",
            "x-apico-parent-entity-path": ".tenants.sets.projects",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "set-id",
                    "description": "The id (usually a GUID) of the set",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "project-id",
                    "description": "The id (usually a GUID) of the project",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                }
            ],
            "get": {
                "description": "Search for a service",
                "tags": ["services"],
                "responses": {}
            },
            "post": {
                "description": "Insert a new service",
                "tags": ["services"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')/services('{service-id}')": {
            "description": "A service (API as OpenAPI) in a project in a project set in a tenant",
            "x-apico-path-type-code": "o",
            "x-apico-path-type-name": "Object",
            "x-apico-collection-code": "r",
            "x-apico-collection-name": "Services",
            "x-apico-entity-code": "r",
            "x-apico-entity-name": "Service",
            "x-apico-parent-collection-code": "p",
            "x-apico-parent-collection-name": "Projects",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')/services",
            "x-apico-parent-entity-code": "p",
            "x-apico-parent-entity-name": "Project",
            "x-apico-parent-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/projects",
            "x-apico-parent-entity-path": ".tenants.sets.projects",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "set-id",
                    "description": "The id (usually a GUID) of the set",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "project-id",
                    "description": "The id (usually a GUID) of the project",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                },
                {
                    "name": "service-id",
                    "description": "The id (usually a GUID) of the service",
                    "in": "path",
                    "required": true,
                    "x-apico-object-identifier": true
                }
            ],
            "get": {
                "description": "Read a service",
                "tags": ["services"],
                "responses": {}
            },
            "put": {
                "description": "Upsert a service",
                "tags": ["services"],
                "responses": {}
            },
            "post": {
                "description": "Create an identified service",
                "tags": ["services"],
                "responses": {}
            },
            "delete": {
                "description": "Delete a service",
                "tags": ["services"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')/services('{service-id}')/versions": {
            "description": "All versions of a service in a project in a project set of a tenant",
            "x-apico-path-type-code": "c",
            "x-apico-path-type-name": "Collection",
            "x-apico-collection-code": "v",
            "x-apico-collection-name": "Versions",
            "x-apico-entity-code": "v",
            "x-apico-entity-name": "Version",
            "x-apico-parent-collection-code": "r",
            "x-apico-parent-collection-name": "Services",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')/services('{service-id}')/versions",
            "x-apico-parent-entity-code": "r",
            "x-apico-parent-entity-name": "Service",
            "x-apico-parent-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')/services",
            "x-apico-parent-entity-path": ".tenants.sets.projects.services",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "set-id",
                    "description": "The id (usually a GUID) of the set",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "project-id",
                    "description": "The id (usually a GUID) of the project",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "service-id",
                    "description": "The id (usually a GUID) of the service",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                }
            ],
            "get": {
                "description": "Search for a version",
                "tags": ["versions"],
                "responses": {}
            },
            "post": {
                "description": "Insert a new version",
                "tags": ["versions"],
                "responses": {}
            }
        },
        "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')/services('{service-id}')/versions('{version-id}')": {
            "description": "A version of a service in a project in a project set in a tenant",
            "x-apico-path-type-code": "o",
            "x-apico-path-type-name": "Object",
            "x-apico-collection-code": "v",
            "x-apico-collection-name": "Versions",
            "x-apico-entity-code": "v",
            "x-apico-entity-name": "Version",
            "x-apico-parent-collection-code": "r",
            "x-apico-parent-collection-name": "Services",
            "x-apico-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')/services('{service-id}')/versions",
            "x-apico-parent-entity-code": "r",
            "x-apico-parent-entity-name": "Service",
            "x-apico-parent-collection-absolute-path": "/tenants('{tenant-id}')/sets('{set-id}')/projects('{project-id}')/services",
            "x-apico-parent-entity-path": ".tenants.sets.projects.services",
            "parameters": [
                {
                    "name": "tenant-id",
                    "description": "The id (usually a GUID) of the tenant",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "set-id",
                    "description": "The id (usually a GUID) of the set",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "project-id",
                    "description": "The id (usually a GUID) of the project",
                    "in": "path",
                    "required": true
                },
                {
                    "name": "service-id",
                    "description": "The id (usually a GUID) of the service",
                    "in": "path",
                    "required": true,
                    "x-apico-parent-object-identifier": true
                },
                {
                    "name": "version-id",
                    "description": "The id (usually a GUID) of the version",
                    "in": "path",
                    "required": true,
                    "x-apico-object-identifier": true
                }
            ],
            "get": {
                "description": "Read a version",
                "tags": ["versions"],
                "responses": {}
            },
            "put": {
                "description": "Upsert a version",
                "tags": ["versions"],
                "responses": {}
            },
            "post": {
                "description": "Create an identified version",
                "tags": ["versions"],
                "responses": {}
            },
            "delete": {
                "description": "Delete a version",
                "tags": ["versions"],
                "responses": {}
            }
        }
    }
}